/*! @copyright Peter T Bosse II | @license Apache-2.0 | @link https://github.com/ptb/style/tree/60aa274 | @version 2019.5.28-1 */
function t(t={}){return s({input:t}).map(f).map(l).map(e).filter(Boolean).join(" ")}function e(t={}){const e=t.emit,n=t.identifier;return e?n:null}function n(t=[]){return t.map(function(t){return/^%/u.test(t)?".".concat(d({property:t,value:t}).identifier):t})}function o(t={},e=!1){const n=e&&t.media,o=t.property;return/^%/u.test(o)||!b(o)?null:"".concat(n?"@media ".concat(n,"{"):"",function(t={}){return(t.selectors||[]).map(function(t){return t.join("")}).join(",")}(t),"{",function(t={}){const e=t.block||[];let n=";";return e.map(function(t){return x(t).map(function(t){const e=t[0],o=t[1];if(h(o)){const t=x(o).map(function(t){return g(t[0]).concat(":",t[1])}).join(";");return n="","".concat(e,"{",t,"}")}return"".concat(e,":",o)})}).join(n)}(t),"}",n?"}":"")}function r(){let t=[];return m.forEach(function(e,n){let r=[];e.forEach(function(t){r.push(o(t))}),r=r.sort(),n&&(r.unshift("@media ".concat(n,"{")),r.push("}")),t=t.concat(r)}),t.filter(Boolean).join("")}const i=Boolean("undefined"!=typeof window&&window.document&&window.document.createElement),a=function(){let t;return function(e=""){let n;for(n of(void 0===t&&(t=document.querySelectorAll("style[data-creator='@amory/style']")),t))if(n.media===e)return n;return(n=document.createElement("style")).setAttribute("data-creator","@amory/style"),e.length&&(n.media=e),document.head.appendChild(n),t=document.querySelectorAll("style[data-creator='@amory/style']"),n}}();function l(t={}){return i&&c(),i?function(t={}){if(i){const e=a().sheet,n=o(t,!0);b(e)&&n&&e.insertRule(n,e.cssRules.length)}return t}(t):t}const c=function(t,e=0){let n;return function(){clearTimeout(n),n=setTimeout(t,e)}}(function(){const t=a(),e=r();t.innerHTML=e},25);function s(t={}){return function(t={}){const e=!b(t.emit)||t.emit,n=t.input||{},o=t.media||"",r=t.selectors||[];return x(n).reduce(function(t,n){const i=n[0],a=n[1];return t.concat({block:[{[g(i)]:a}],emit:e,input:{[i]:a},media:o,property:p(i),selectors:r,value:a})},[])}(t).reduce(function(t,e){return t.concat(function(t={}){const e=t.property;let n=t.value;if(!/(animationIterationCount|borderImage(?:Outset|Slice|Width)|box(?:(?:Flex)(?:Group)?|OrdinalGroup)|column(?:Count|s)|fillOpacity|floodOpacity|stopOpacity|stroke(?:Dash(?:array|offset)|Miterlimit|Opacity|Width)|flex(?:Grow|Positive|Shrink|Negative|Order)?\b|grid(?:Area|Column(?:End|Start)?|Row(?:End|Start)?)|fontWeight|line(?:Clamp|Height)|opacity|\border|orphans|tabSize|widows|zIndex|zoom)/u.test(e)&&function(t){return"number"==typeof t}(n)&&0!==n)return n="".concat(n,"px"),B(t,{block:null},{block:[{[g(e)]:n}],value:n});return t}(e))},[]).reduce(function(t,e){return t.concat(function(t={}){const e=t.property,n=t.value;if(/^@media/u.test(e)&&h(n)){const o=[t.media,g(e.slice(6).trim())].filter(Boolean).join(" and ");return s({input:n,media:o})}return t}(e))},[]).reduce(function(t,e){return t.concat(function(t={}){const e=t.property,n=t.value;if(/^%/u.test(e)&&!0===n)return B(t,{identifier:d({media:t.media,property:e,value:e}).identifier});return t}(e))},[]).reduce(function(t,e){return t.concat(function(t={}){const e=t.property,o=t.value;if(/([#$%&*+,.>[^~]|:[a-z])/u.test(e)&&h(o)){const r=/^:/u.test(e),i=function(t=""){const e="-?[A-Z_a-z\\u{00a0}-\\u{ffff}]+[-0-9A-Z_a-z\\u{00a0}-\\u{ffff}]*",n=new RegExp(["(&)","(#".concat(e,")"),"(\\.".concat(e,")"),"(\\$".concat(e,")"),"(%".concat(e,")"),"(\\^".concat(e,")"),"(\\[[-$*0-9=A-Z^_a-z|~\\u{00a0}-\\u{ffff}]+\\])","(::?".concat(e,")"),"(".concat(e,")"),"(\\*)","([ +>~]+)"].join("|"),"gu");return t.split(",").map(function(t){return t.trim().match(n).map(function(t){return t.trim().replace(/^$/u," ")})})}(g(e)).reduce(function(e,n){return e.concat(function(t=[],e=[]){return e.reduce(function(e,n){if(t.length){const o=n.indexOf("&");return t.forEach(function(t){e.push(o<0?t.concat(" ",n):n.slice(0,o).concat(t,n.slice(o+1)))}),e}return e.concat([n])},[])}(t.selectors,[n]))},[]).reduce(function(t,e){return t.concat([n(e)])},[]);return s({emit:r,input:o,media:t.media,selectors:i})}return t}(e))},[]).reduce(function(t,e){return t.concat(d(e))},[]).reduce(function(t,e){return t.concat(function(t={}){const e=t.value;if(Array.isArray(e)){const n=t.property;let o=[];const r=[];switch(n){case"backgroundImage":o=[{[g(n)]:e.join(",")}];break;case"fontFamily":o=[{"font-family":e.reduce(function(t,e){if(h(e)){const o=u({property:n,value:e}).shift();return r.push(o),t.concat(o.value)}return t.concat(e)},[]).join(",")}];break;default:o=e.map(function(t){return{[g(n)]:t}})}return r.concat(B(t,{block:null},{block:o}))}return t}(e))},[]).reduce(function(t,e){return t.concat(u(e))},[]).reduce(function(t,e){return t.concat(function(t={}){const e=t.property,n=t.value;if("animationName"===e&&h(n)){const e=t.media||"",o=d(B(t,{selectors:null},{selectors:[["@keyframes"," "]]})),r=o.identifier;return[B(o,{block:null,selectors:null},{block:x(n).reduce(function(t,e){return t.concat({[g(e[0])]:e[1]})},[]),emit:!1,media:"",selectors:[o.selectors[0].concat(r)],value:r}),B(o,{block:null,selectors:null},{block:[{"animation-name":r}],emit:!0,media:e,selectors:[[".".concat(r)]],value:r})]}return t}(e))},[]).reduce(function(t,e){return t.concat(function(t={}){const e=t.property,n=t.value;if(/^([a-z]+)$/u.test(e)&&h(n)&&!k(n))return s({emit:!1,input:n,media:t.media,selectors:[[e]]});return t}(e))},[])}function u(t={}){const e=t.property,n=t.value;if("fontFamily"===e&&h(n)&&!k(n)){const e=t.media||"",o=d(B(t,{selectors:null},{selectors:[["@font-face"]]})),r=n.fontFamily||n["font-family"]||o.identifier;return n.fontFamily=r,delete n["font-family"],[B(o,{block:null},{block:x(n).reduce(function(t,e){return t.concat({[g(e[0])]:e[1]})},[]),emit:!1,media:"",value:r}),B(o,{block:null,selectors:null},{block:[{"font-family":r}],emit:!0,media:e,selectors:[[".".concat(o.identifier)]],value:r})]}return t}function d(t={}){if(t.property){const e=t.media||"",n=t.property,o=t.value;let r=t.selectors||[];const i=b(t.identifier)?t.identifier:function(t=""){const e=parseInt("af",36);switch(!0){case/^%/u.test(t):return 0+e;case/^\x2D\x2D/u.test(t):return 1+e;default:return"$*,--*,all,direction,unicodeBidi,writingMode,textOrientation,glyphOrientationVertical,textCombineUpright,textTransform,whiteSpace,textSpaceCollapse,textSpaceTrim,tabSize,wordBreak,lineBreak,hyphens,overflowWrap,wordWrap,textWrap,wrapBefore,wrapAfter,wrapInside,hyphenateCharacter,hyphenateLimitZone,hyphenateLimitChars,hyphenateLimitLines,hyphenateLimitLast,textAlign,textAlignAll,textAlignLast,textJustify,textGroupAlign,wordSpacing,letterSpacing,linePadding,textSpacing,textIndent,hangingPunctuation,textDecoration,textDecorationLine,textDecorationStyle,textDecorationColor,textDecorationWidth,textDecorationSkip,textDecorationSkipInk,textUnderlineOffset,textUnderlinePosition,textEmphasis,textEmphasisStyle,textEmphasisColor,textEmphasisPosition,textEmphasisSkip,textShadow,src,font,fontStyle,fontVariant,fontWeight,fontStretch,fontSize,lineHeight,fontFamily,fontMinSize,fontMaxSize,fontSizeAdjust,fontSynthesis,fontSynthesisWeight,fontSynthesisStyle,fontSynthesisSmallCaps,unicodeRange,fontFeatureSettings,fontVariationSettings,fontLanguageOverride,fontKerning,fontVariantLigatures,fontVariantPosition,fontVariantCaps,fontVariantNumeric,fontVariantAlternates,fontVariantEastAsian,fontOpticalSizing,fontPalette,fontVariantEmoji,content,quotes,stringSet,bookmarkLevel,bookmarkLabel,bookmarkState,running,footnoteDisplay,footnotePolicy,outline,outlineColor,outlineStyle,outlineWidth,outlineOffset,resize,textOverflow,cursor,caret,caretColor,caretShape,navUp,navRight,navDown,navLeft,userSelect,appearance,position,top,right,bottom,left,offsetBefore,offsetAfter,offsetStart,offsetEnd,zIndex,display,contain,width,height,minWidth,minHeight,maxWidth,maxHeight,boxSizing,visibility,pageBreakBefore,pageBreakAfter,pageBreakInside,margin,marginTop,marginRight,marginBottom,marginLeft,marginTrim,padding,paddingTop,paddingRight,paddingBottom,paddingLeft,dominantBaseline,verticalAlign,alignmentBaseline,baselineShift,inlineSizing,initialLetters,initialLettersAlign,initialLettersWrap,listStyle,listStyleType,listStylePosition,listStyleImage,markerSide,counterReset,counterSet,counterIncrement,overflow,overflowX,overflowY,overflowBlock,overflowInline,blockOverflow,lineClamp,maxLines,continue,tableLayout,borderCollapse,borderSpacing,captionSide,emptyCells,flexFlow,flexDirection,flexWrap,order,flex,flexGrow,flexShrink,flexBasis,placeContent,alignContent,justifyContent,placeItems,alignItems,justifyItems,placeSelf,alignSelf,justifySelf,gap,rowGap,columnGap,columns,columnWidth,columnCount,columnRule,columnRuleWidth,columnRuleStyle,columnRuleColor,columnSpan,columnFill,flowInto,flowFrom,regionFragment,breakBefore,breakAfter,breakInside,orphans,widows,boxDecorationBreak,grid,gridTemplate,gridTemplateRows,gridTemplateColumns,gridTemplateAreas,gridAutoFlow,gridAutoRows,gridAutoColumns,gridArea,gridRow,gridRowStart,gridRowEnd,gridColumn,gridColumnStart,gridColumnEnd,rubyPosition,rubyMerge,rubyAlign,float,clear,blockSize,inlineSize,minBlockSize,minInlineSize,maxBlockSize,maxInlineSize,marginBlock,marginBlockStart,marginBlockEnd,marginInline,marginInlineStart,marginInlineEnd,inset,insetBlock,insetBlockStart,insetBlockEnd,insetInline,insetInlineStart,insetInlineEnd,paddingBlock,paddingBlockStart,paddingBlockEnd,paddingInline,paddingInlineStart,paddingInlineEnd,borderBlockWidth,borderBlockStartWidth,borderBlockEndWidth,borderInlineWidth,borderInlineStartWidth,borderInlineEndWidth,borderBlockStyle,borderBlockStartStyle,borderBlockEndStyle,borderInlineStyle,borderInlineStartStyle,borderInlineEndStyle,borderBlockColor,borderBlockStartColor,borderBlockEndColor,borderInlineColor,borderInlineStartColor,borderInlineEndColor,borderBlock,borderBlockStart,borderBlockEnd,borderInline,borderInlineStart,borderInlineEnd,borderStartStartRadius,borderStartEndRadius,borderEndStartRadius,borderEndEndRadius,fillRule,fillBreak,fill,fillColor,fillImage,fillOrigin,fillPosition,fillSize,fillRepeat,fillOpacity,strokeWidth,strokeAlign,strokeLinecap,strokeLinejoin,strokeMiterlimit,strokeBreak,strokeDasharray,strokeDashoffset,strokeDashCorner,strokeDashJustify,stroke,strokeColor,strokeImage,strokeOrigin,strokePosition,strokeSize,strokeRepeat,strokeOpacity,marker,markerStart,markerMid,markerEnd,markerSegment,markerPattern,markerKnockoutLeft,markerKnockoutRight,vectorEffect,colorRendering,shapeRendering,textRendering,imageRendering,bufferedRendering,stopColor,stopOpacity,color,opacity,colorAdjust,objectFit,objectPosition,imageResolution,imageOrientation,imageRendering,background,backgroundColor,backgroundImage,backgroundPosition,backgroundPositionX,backgroundPositionY,backgroundSize,backgroundRepeat,backgroundAttachment,backgroundOrigin,backgroundClip,border,borderTop,borderRight,borderBottom,borderLeft,borderWidth,borderTopWidth,borderRightWidth,borderBottomWidth,borderLeftWidth,borderStyle,borderTopStyle,borderRightStyle,borderBottomStyle,borderLeftStyle,borderColor,borderTopColor,borderRightColor,borderBottomColor,borderLeftColor,borderRadius,borderTopLeftRadius,borderTopRightRadius,borderBottomRightRadius,borderBottomLeftRadius,borderImage,borderImageSource,borderImageSlice,borderImageWidth,borderImageOutset,borderImageRepeat,boxShadow,clip,clipPath,clipRule,mask,maskImage,maskPosition,maskSize,maskRepeat,maskOrigin,maskClip,maskComposite,maskMode,maskBorder,maskBorderSource,maskBorderSlice,maskBorderWidth,maskBorderOutset,maskBorderRepeat,maskBorderMode,maskType,shapeOutside,shapeImageThreshold,shapeMargin,filter,floodColor,floodOpacity,colorInterpolationFilters,lightingColor,mixBlendMode,isolation,backgroundBlendMode,transition,transitionProperty,transitionDuration,transitionTimingFunction,transitionDelay,transform,transformOrigin,transformBox,transformStyle,perspective,perspectiveOrigin,backfaceVisibility,animation,animationName,animationDuration,animationTimingFunction,animationDelay,animationIterationCount,animationDirection,animationFillMode,animationPlayState,offset,offsetPosition,offsetPath,offsetDistance,offsetRotate,offsetAnchor,willChange,scrollSnapType,scrollPadding,scrollPaddingTop,scrollPaddingRight,scrollPaddingBottom,scrollPaddingLeft,scrollPaddingBlock,scrollPaddingBlockStart,scrollPaddingBlockEnd,scrollPaddingInline,scrollPaddingInlineStart,scrollPaddingInlineEnd,scrollMargin,scrollMarginTop,scrollMarginRight,scrollMarginBottom,scrollMarginLeft,scrollMarginBlock,scrollMarginBlockStart,scrollMarginBlockEnd,scrollMarginInline,scrollMarginInlineStart,scrollMarginInlineEnd,scrollSnapAlign,scrollSnapStop,scrollBehavior".split(",").indexOf(p(t).replace(/^(Moz|Ms|Webkit)/u,"").replace(/^([A-Z])/u,function(t){return t.toLowerCase()}))+e}}(n).toString(36)+function(t=""){return t.split("").reduce(function(t,e){return t<<5^t^0xffffffffff&e.charCodeAt()},21524).toString(36)}("".concat(e).concat(r.map(function(t){return t.join("")}).join(",")).concat(JSON.stringify(o))).slice(-3);return r=r.length||/^%/u.test(n)?r.map(function(t){return/^:/u.test(t[0])?[].concat(".".concat(i),t):t}):r.concat([[".".concat(i)]]),B(t,{selectors:null},{identifier:i,selectors:r})}return t}function f(t={}){const e=t.block||[],n=t.media||"",o=JSON.stringify(e);if(m.has(n)||m.set(n,new Map),m.get(n).has(o)){const e=m.get(n).get(o),r=e.selectors.findIndex(function(e){return e.join("")===t.selectors[0].join("")})<0;m.get(n).set(o,B(t,{selectors:null},{selectors:(r?e.selectors.concat(t.selectors):e.selectors).sort(function(t,e){return t.length-e.length||t.join("").localeCompare(e.join(""))})}))}else m.get(n).set(o,t);return m.get(n).get(o)}const m=new Map;function p(t=""){return t.replace(/\x2D([a-z])/gu,function(t,e){return e.toUpperCase()})}function g(t=""){return t.replace(/[A-Z]|^ms/gu,"-$&").toLowerCase()}const k=Array.isArray;function b(t){return void 0!==t}function h(t){return"object"==typeof t}function S(t){return Boolean(t)&&h(t)&&!/^\[object (?:Date|RegExp)\]$/u.test(Object.prototype.toString.call(t))}function y(t){return S(t)?B(function(t){return k(t)?[]:{}}(t),t):t}function B(...t){return t.reduce(function(t,e){return k(e)?function(t,e){return(k(t)&&k(e)?t.concat(e):e).map(y)}(t,e):S(e)?function(t,e){for(const n of Object.keys(e))t[n]=B(Object.prototype.hasOwnProperty.call(t,n)?t[n]:{},e[n]);return t}(t,e):y(e)},{})}function x(t={}){return Object.keys(t).map(function(e){return[e,t[e]]})}function I(e={}){return x(e).reduce(function(e,n){const o=n[0],r=n[1];return e[o]=t(r),e},{})}export{I as create,t as css,r as getStyles,B as merge};
